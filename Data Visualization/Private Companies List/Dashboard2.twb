<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0114.0856                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' inline='true' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\daren\Desktop\NM3229\Assignment 1\Data Set- Inc5000 Company List_2014.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Data Set- Inc5000 Company List_' table='[&apos;Data Set- Inc5000 Company List_$&apos;]' type='table'>
          <columns gridOrigin='A1:S5001:no:A1:S5001:0' header='yes' outcome='6'>
            <column datatype='string' name='ï»¿_input' ordinal='0' />
            <column datatype='integer' name='_num' ordinal='1' />
            <column datatype='string' name='_widgetName' ordinal='2' />
            <column datatype='string' name='_source' ordinal='3' />
            <column datatype='integer' name='_resultNumber' ordinal='4' />
            <column datatype='string' name='_pageUrl' ordinal='5' />
            <column datatype='integer' name='id' ordinal='6' />
            <column datatype='integer' name='rank' ordinal='7' />
            <column datatype='integer' name='workers' ordinal='8' />
            <column datatype='string' name='company' ordinal='9' />
            <column datatype='string' name='url' ordinal='10' />
            <column datatype='string' name='state_l' ordinal='11' />
            <column datatype='string' name='state_s' ordinal='12' />
            <column datatype='string' name='city' ordinal='13' />
            <column datatype='string' name='metro' ordinal='14' />
            <column datatype='real' name='growth' ordinal='15' />
            <column datatype='integer' name='revenue' ordinal='16' />
            <column datatype='string' name='industry' ordinal='17' />
            <column datatype='integer' name='yrs_on_list' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ï»¿_input</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ï»¿_input]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>ï»¿_input</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_num]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>_num</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_widgetName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[_widgetName]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>_widgetName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[_source]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>_source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_resultNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_resultNumber]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>_resultNumber</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_pageUrl</remote-name>
            <remote-type>130</remote-type>
            <local-name>[_pageUrl]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>_pageUrl</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[workers]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>workers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_l</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state_l]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>state_l</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_s</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state_s]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>state_s</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro</remote-name>
            <remote-type>130</remote-type>
            <local-name>[metro]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>metro</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[growth]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>growth</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[revenue]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>revenue</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yrs_on_list</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yrs_on_list]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias>yrs_on_list</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data Set- Inc5000 Company List_]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S5001:no:A1:S5001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Revenue per worker' datatype='real' name='[Calculation_123004613084049408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([revenue])/SUM([workers])' />
      </column>
      <column caption='Bold HR &amp; Travel Hosp' datatype='string' name='[Calculation_123004613170556929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[industry]=&quot;Travel &amp; Hospitality&quot; OR [industry]=&apos;Human Resources&apos;&#13;&#10;THEN&#13;&#10;&quot;BOLD&quot;&#13;&#10;ELSE&#13;&#10;&quot;NORMAL&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='_Num' datatype='integer' hidden='true' name='[_num]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[_pageUrl]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[_resultNumber]' role='dimension' type='ordinal' />
      <column caption='_Source' datatype='string' hidden='true' name='[_source]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[_widgetName]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Growth' datatype='real' name='[growth]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' hidden='true' name='[id]' role='dimension' type='ordinal' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Metro' datatype='string' name='[metro]' role='dimension' type='nominal' />
      <column caption='Rank' datatype='integer' name='[rank]' role='measure' type='quantitative' />
      <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
      <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State S' datatype='string' name='[state_s]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Url' datatype='string' hidden='true' name='[url]' role='dimension' type='nominal' />
      <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
      <column caption='Yrs On List' datatype='integer' name='[yrs_on_list]' role='measure' type='quantitative' />
      <column caption='Ï»¿ Input' datatype='string' hidden='true' name='[ï»¿_input]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_123004613170556929]' derivation='None' name='[none:Calculation_123004613170556929:nk]' pivot='key' type='nominal' />
      <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
      <group caption='Action (State L)' hidden='true' name='[Action (State L)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state_l]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Company, Industry'>
          <field>[company]</field>
          <field>[industry]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.489672' measure-ordering='alphabetic' measure-percentage='0.510328' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:industry:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Business Products &amp; Services&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Environmental Services&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Logistics &amp; Transportation&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Advertising &amp; Marketing&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Travel &amp; Hospitality&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Food &amp; Beverage&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Government Services&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Software&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Computer Hardware&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Media&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Consumer Products &amp; Services&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Human Resources&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;IT Services&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state_l:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_123004613170556929:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>&quot;NORMAL&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;BOLD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:industry:nk]' type='palette'>
            <map to='#082132'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Media&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Travel &amp; Hospitality&quot;</bucket>
            </map>
            <map to='#5f2f05'>
              <bucket>&quot;Software&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Food &amp; Beverage&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Environmental Services&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Consumer Products &amp; Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Advertising &amp; Marketing&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Logistics &amp; Transportation&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Government Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IT Services&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Human Resources&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Business Products &amp; Services&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Computer Hardware&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Revenue per Worker (Industry)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column caption='Revenue per worker' datatype='real' name='[Calculation_123004613084049408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([revenue])/SUM([workers])' />
            </column>
            <column caption='Bold HR &amp; Travel Hosp' datatype='string' name='[Calculation_123004613170556929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[industry]=&quot;Travel &amp; Hospitality&quot; OR [industry]=&apos;Human Resources&apos;&#13;&#10;THEN&#13;&#10;&quot;BOLD&quot;&#13;&#10;ELSE&#13;&#10;&quot;NORMAL&quot;&#13;&#10;END' />
            </column>
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_123004613170556929]' derivation='None' name='[none:Calculation_123004613170556929:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_123004613084049408]' derivation='User' name='[usr:Calculation_123004613084049408:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' direction='DESC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613084049408:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' value='20' />
            <format attr='width' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' value='bold' />
            <format attr='width' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613084049408:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:Calculation_123004613170556929:nk]' />
              <text column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613084049408:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Reveue per Worker (Country)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column caption='Revenue per worker' datatype='real' name='[Calculation_123004613084049408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([revenue])/SUM([workers])' />
            </column>
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_123004613084049408]' derivation='User' name='[usr:Calculation_123004613084049408:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' direction='ASC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613084049408:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613084049408:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Selected states'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Gill Sans MT' fontsize='11'>Majority of workers in Maryland in industries with low Revenue per Worker ratio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column caption='Revenue per worker' datatype='real' name='[Calculation_123004613084049408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([revenue])/SUM([workers])' />
            </column>
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workers]' derivation='Sum' name='[sum:workers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_123004613084049408]' derivation='User' name='[usr:Calculation_123004613084049408:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Energy&quot;</bucket>
              <bucket>&quot;Computer Hardware&quot;</bucket>
              <bucket>&quot;Real Estate&quot;</bucket>
              <bucket>&quot;Consumer Products &amp; Services&quot;</bucket>
              <bucket>&quot;Construction&quot;</bucket>
              <bucket>&quot;Logistics &amp; Transportation&quot;</bucket>
              <bucket>&quot;Insurance&quot;</bucket>
              <bucket>&quot;Financial Services&quot;</bucket>
              <bucket>&quot;Advertising &amp; Marketing&quot;</bucket>
              <bucket>&quot;Retail&quot;</bucket>
              <bucket>&quot;Telecommunications&quot;</bucket>
              <bucket>&quot;Health&quot;</bucket>
              <bucket>&quot;Government Services&quot;</bucket>
              <bucket>&quot;Manufacturing&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Environmental Services&quot;</bucket>
              <bucket>&quot;IT Services&quot;</bucket>
              <bucket>&quot;Engineering&quot;</bucket>
              <bucket>&quot;Travel &amp; Hospitality&quot;</bucket>
              <bucket>&quot;Software&quot;</bucket>
              <bucket>&quot;Business Products &amp; Services&quot;</bucket>
              <bucket>&quot;Media&quot;</bucket>
              <bucket>&quot;Food &amp; Beverage&quot;</bucket>
              <bucket>&quot;Human Resources&quot;</bucket>
              <bucket>&quot;Security&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Washington&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' direction='DESC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' />
          <slices>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' scope='rows' value='auto' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='left' />
            <format attr='text-align' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='right' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='on' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='right' />
            <format attr='text-orientation' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='text-orientation' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='wrap' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='auto' />
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='center' />
            <format attr='font-family' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='Calibri' />
            <format attr='font-size' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='9' />
            <format attr='font-weight' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' value='Industry'>
              <formatted-text>
                <run bold='false' fontname='Calibri'>Industry</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' />
              <lod column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613084049408:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.69165748357772827' />
                <format attr='mark-color' value='#f1c28c' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]</rows>
        <cols>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='State / Industry Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[workers]' derivation='Sum' name='[sum:workers:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' direction='DESC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</rows>
        <cols>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='State Revenues'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Arizona&quot;' />
              <groupfilter from='&quot;California&quot;' function='range' level='[none:state_l:nk]' to='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Georgia&quot;' />
              <groupfilter from='&quot;Illinois&quot;' function='range' level='[none:state_l:nk]' to='&quot;Kansas&quot;' />
              <groupfilter from='&quot;Maryland&quot;' function='range' level='[none:state_l:nk]' to='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter from='&quot;Ohio&quot;' function='range' level='[none:state_l:nk]' to='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter from='&quot;Tennessee&quot;' function='range' level='[none:state_l:nk]' to='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' direction='DESC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' />
          <slices>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' scope='cols' value='Revenue ($)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' scope='rows' value='auto' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='left' />
            <format attr='text-align' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='right' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='on' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='right' />
            <format attr='text-orientation' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='text-orientation' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='wrap' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='false' />
            <format attr='text-align' scope='rows' value='auto' />
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='right' />
            <format attr='font-family' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='Calibri' />
            <format attr='font-size' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='9' />
            <format attr='font-weight' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#99b872' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='493' />
                <format attr='maxwidth' value='493' />
                <format attr='minheight' value='600' />
                <format attr='maxheight' value='600' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</rows>
        <cols>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='State Revenues vs Workers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workers]' derivation='Sum' name='[sum:workers:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Arizona&quot;' />
              <groupfilter from='&quot;California&quot;' function='range' level='[none:state_l:nk]' to='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Georgia&quot;' />
              <groupfilter from='&quot;Illinois&quot;' function='range' level='[none:state_l:nk]' to='&quot;Kansas&quot;' />
              <groupfilter from='&quot;Maryland&quot;' function='range' level='[none:state_l:nk]' to='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter from='&quot;Ohio&quot;' function='range' level='[none:state_l:nk]' to='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter from='&quot;Tennessee&quot;' function='range' level='[none:state_l:nk]' to='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' direction='DESC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' />
          <slices>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' scope='rows' value='auto' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='left' />
            <format attr='text-align' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='right' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='on' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='right' />
            <format attr='text-orientation' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='text-orientation' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='wrap' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='auto' />
            <format attr='text-align' scope='cols' value='auto' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline0' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' z-order='1' />
            <reference-line axis-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' z-order='2' />
            <reference-line axis-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline2' label-type='none' scope='per-table' symmetric='true' tile-count='4' value-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' z-order='3' />
            <reference-line axis-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' enable-instant-analytics='true' formula='median' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#99b872' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</rows>
        <cols>([excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk] + [excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='State Workers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column caption='State L' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workers]' derivation='Sum' name='[sum:workers:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Arizona&quot;' />
              <groupfilter from='&quot;California&quot;' function='range' level='[none:state_l:nk]' to='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Georgia&quot;' />
              <groupfilter from='&quot;Illinois&quot;' function='range' level='[none:state_l:nk]' to='&quot;Kansas&quot;' />
              <groupfilter from='&quot;Maryland&quot;' function='range' level='[none:state_l:nk]' to='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter from='&quot;Ohio&quot;' function='range' level='[none:state_l:nk]' to='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter from='&quot;Tennessee&quot;' function='range' level='[none:state_l:nk]' to='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:state_l:nk]' member='&quot;Wisconsin&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' direction='DESC' using='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' />
          <slices>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' scope='rows' value='auto' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='left' />
            <format attr='text-align' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' value='right' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='24' />
            <format attr='wrap' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='on' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='right' />
            <format attr='text-orientation' data-class='subtotal' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='text-orientation' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='0' />
            <format attr='wrap' data-class='total' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='auto' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='auto' />
            <format attr='text-align' scope='cols' value='auto' />
            <format attr='text-align' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]' value='center' />
            <format attr='font-family' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' value='Calibri' />
            <format attr='font-size' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' value='9' />
            <format attr='font-weight' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f1c28c' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</rows>
        <cols>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Worker Revenue Correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Worker and revenue of IT services private companies in U.S.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_ (Data Set- Inc5000 Company List_2014)' name='excel-direct.079jvqf0yns3yf17daqnd04exrp8' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.079jvqf0yns3yf17daqnd04exrp8'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column-instance column='[revenue]' derivation='Sum' name='[sum:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workers]' derivation='Sum' name='[sum:workers:qk]' pivot='key' type='quantitative' />
            <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]'>
            <groupfilter function='level-members' level='[none:company:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]'>
            <groupfilter function='member' level='[none:industry:nk]' member='&quot;IT Services&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' included-values='in-range-or-null'>
            <min>0</min>
          </filter>
          <slices>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</column>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</column>
            <column>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' field-type='quantitative' max='3212193465' min='1500000' range-type='fixed' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='title' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' scope='cols' value='Revenue $m (logarithmic scale)' />
            <format attr='subtitle' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]' scope='rows' value='Workers (logarithmic scale)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' value='Industry'>
              <formatted-text>
                <run>Industry</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='true' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='2' />
                <format attr='stroke-color' value='#00000067' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:workers:qk]</rows>
        <cols>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[sum:revenue:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='827' maxwidth='1169' minheight='827' minwidth='1169' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='37' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='33' param='horz' type='layout-flow' w='99658' x='0' y='0'>
              <zone h='100000' id='30' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                <zone h='100000' id='28' type='layout-basic' w='99658' x='0' y='0'>
                  <zone h='100000' id='26' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                    <zone h='100000' id='22' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                      <zone h='100000' id='20' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                        <zone h='100000' id='16' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                          <zone h='100000' id='12' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                            <zone fixed-size='622' h='100000' id='10' is-fixed='true' param='horz' type='layout-flow' w='99658' x='0' y='0'>
                              <zone h='100000' id='8' type='layout-basic' w='99658' x='0' y='0'>
                                <zone forceUpdate='true' h='11487' id='13' type='text' w='99658' x='0' y='0'>
                                  <formatted-text>
                                    <run bold='true' fontname='Gill Sans MT' fontsize='24'>Revenue per worker ratio reveals positive correlation between workers &#10;and revenues of private companies in United States from 2010 – 2014 </run>
                                  </formatted-text>
                                </zone>
                                <zone h='75091' id='7' name='State Workers' w='30155' x='23309' y='24909' />
                                <zone h='75091' id='14' name='State Revenues' w='23309' x='0' y='24909' />
                                <zone h='79807' id='31' name='Selected states' show-title='true' w='26776' x='53464' y='20193' />
                                <zone h='71947' id='34' name='Selected states' pane-specification-id='3' param='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' type='color' w='13858' x='80240' y='28053' />
                                <zone h='69891' id='35' name='Revenue per Worker (Industry)' w='5560' x='94098' y='30109' />
                                <zone h='8706' id='43' type='empty' w='26776' x='53464' y='11487' />
                                <zone h='16566' id='44' type='empty' w='13858' x='80240' y='11487' />
                                <zone h='18622' id='45' type='empty' w='5560' x='94098' y='11487' />
                                <zone h='13422' id='50' type='empty' w='53464' x='0' y='11487' />
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone forceUpdate='true' h='9432' id='47' type='text' w='96151' x='855' y='8706'>
          <formatted-text>
            <run fontname='Calibri' fontsize='11'>We have shown that more workers quantifiably translates into more revenue for companies. Hoever, there are a few outliers and in particular, Maryland. Using Revenue per Worker as an indicator shows that Maryland has a weaker revenue to worker correlation as majority of it&apos;s worker is in low performing industries like Travel &amp; Hospitality and Human Resources.</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3628' id='48' type='text' w='10436' x='90334' y='27570'>
          <formatted-text>
            <run fontname='Calibri'>Revenue per Worker</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6288' id='41' type='text' w='32934' x='11377' y='19347'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Gill Sans MT' fontsize='11'>Positive correlation between number of workers and &#10;companies&apos; revenue for top 30 states of United States.</run>
          </formatted-text>
        </zone>
        <zone h='2902' id='51' param='C:\Users\daren\Desktop\line.png' type='bitmap' w='101198' x='-770' y='15478' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='Worker Revenue Correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' type='filter' values='relevant' />
            <card param='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='State Revenues vs Workers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_s:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='State Revenues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_s:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='State Workers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_s:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Revenue per Worker (Industry)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Selected states'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='State Revenues'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State Workers'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Revenue per Worker (Industry)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:Calculation_123004613170556929:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:Calculation_123004613170556929:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_s:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[usr:Calculation_123004613170556929:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Reveue per Worker (Country)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='State / Industry Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Selected states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:company:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:industry:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_l:nk]</field>
            <field>[excel-direct.079jvqf0yns3yf17daqnd04exrp8].[none:state_s:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Worker Revenue Correlation' width='192'>
      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
      HgcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State Revenues vs Workers' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State Revenues' width='192'>
      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
      kEYAkPYPS+bv549bJQIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State Workers' width='192'>
      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
      EE60/w8D86GXgJUELAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue per Worker (Industry)' width='76'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Reveue per Worker (Country)' width='116'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='State / Industry Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selected states' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
